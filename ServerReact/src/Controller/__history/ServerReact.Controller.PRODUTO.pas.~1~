unit ServerReact.Controller.PRODUTO;

interface

uses
Horse,
System.JSON,
ServerReact.Model.DAOGeneric,
ServerReact.Model.Entidades.PRODUTO;

procedure Registry(App : THorse);
procedure Get(Req: THorseRequest; Res: THorseResponse; Next: TProc);
procedure GetID(Req: THorseRequest; Res: THorseResponse; Next: TProc);
procedure Insert(Req: THorseRequest; Res: THorseResponse; Next: TProc);
procedure Update(Req: THorseRequest; Res: THorseResponse; Next: TProc);
procedure Delete(Req: THorseRequest; Res: THorseResponse; Next: TProc);

implementation

procedure Registry(App : THorse);
begin
App.Get('/produto', Get);
App.Get('/produto/:id', GetID);
App.Post('/produto', Insert);
App.Put('/produto/:id', Update);
App.Delete('/produto/:id', Delete);
end;

procedure Insert(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
FDAO : iDAOGeneric<TPRODUTO>;
begin
FDAO := TDAOGeneric<TPRODUTO>.New;
Res.Send<TJSONObject>(FDAO.Insert(Req.Body<TJsonObject>));
end;

procedure GetID(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
FDAO : iDAOGeneric<TPRODUTO>;
begin
FDAO := TDAOGeneric<TPRODUTO>.New;
Res.Send<TJsonObject>(FDAO.Find(Req.Params.Items['id']));
end;

procedure Get(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
FDAO : iDAOGeneric<TPRODUTO>;
begin
FDAO := TDAOGeneric<TPRODUTO>.New;
Res.Send<TJsonArray>(FDAO.Find);
end;

procedure Update(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
FDAO : iDAOGeneric<TPRODUTO>;
begin
FDAO := TDAOGeneric<TPRODUTO>.New;
Res.Send<TJsonObject>(FDAO.Update(Req.Body<TJsonObject>));
end;

procedure Delete(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
FDAO : iDAOGeneric<TPRODUTO>;
begin
FDAO := TDAOGeneric<TPRODUTO>.New;
Res.Send<TJsonObject>(FDAO.Delete('ID', Req.Params.Items['id']));
end;

end.
